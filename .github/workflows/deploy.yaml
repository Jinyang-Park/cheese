name: Deploy # Workflow 이름
on: # Event 감지
  push:
    branches:
      - main # 해당 브랜치의 푸쉬가 일어날 때 CI/CD를 진행하겠다는 뜻

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code # Repo checkout
        uses: actions/checkout@v4
        with:
          repository: 'Jinyang-Park/cheese' # '.git' 확장자를 제거합니다.
          token: ${{ secrets.AWS_TOKEN }} # private 저장소인 경우 접근 권한이 필요합니다.

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Check Node v # Node v 확인
        run: node -v

      - name: Install Dependencies # 의존 파일 설치
        run: npm ci

      - name: Build # React Build
        run: npm run build
        env:
          CI: ''

      - name: zip create
        run: zip -qq -r ./build-app.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3 # Upload build file to S3
        run: |
          aws s3 cp --region ${{ secrets.AWS_REGION }} ./build-app.zip s3://${{ secrets.AWS_S3_BUCKET }}/build-app.zip

      - name: Deploy # Deploy to EC2
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},key=build-app.zip,bundleType=zip
        env:
          MYSQLHOST: ${{ secrets.MYSQLHOST }}
          MYSQLPORT: ${{ secrets.MYSQLPORT }}
          MYSQLUSER: ${{ secrets.MYSQLUSER }}
